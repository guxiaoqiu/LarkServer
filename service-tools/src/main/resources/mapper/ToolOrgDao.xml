<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.workhub.larktools.dao.ToolOrgDao">
    <resultMap id="toolTreeVo" type="com.workhub.larktools.vo.ToolTreeVo">
        <result property="id" column="ID" jdbcType="VARCHAR"/>
        <result property="nodeName" column="NODE_NAME" jdbcType="VARCHAR"/>
        <result property="pid" column="PID" jdbcType="VARCHAR"/>
        <result property="createTime" column="CREATE_TIME" jdbcType="VARCHAR"/>
        <result property="orderBy" column="ORDER_BY" jdbcType="VARCHAR"/>
        <result property="level" column="LEVEL" jdbcType="VARCHAR"/>
        <result property="isLeaf" column="IS_LEAF" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="toolTree" type="com.workhub.larktools.entity.ToolTree">
        <result property="id" column="ID" jdbcType="VARCHAR"/>
        <result property="nodeName" column="NODE_NAME" jdbcType="VARCHAR"/>
        <result property="pid" column="PID" jdbcType="VARCHAR"/>
        <result property="createTime" column="CREATE_TIME" jdbcType="VARCHAR"/>
        <result property="orderBy" column="ORDER_BY" jdbcType="VARCHAR"/>
        <result property="creator" column="CREATOR" jdbcType="VARCHAR"/>
        <result property="updateTime" column="UPDATE_TIME" jdbcType="VARCHAR"/>
        <result property="updator" column="UPDATOR" jdbcType="VARCHAR"/>
        <result property="isDelete" column="I_SDELETE" jdbcType="VARCHAR"/>
    </resultMap>
    <!--新增所有列-->
    <insert id="add" >
        insert into tool_tree(id,node_name, pid, create_time, creator,order_by)
        values (#{params.id},#{params.name}, #{params.pid}, sysdate, #{params.userId}, #{params.order})
    </insert>
    <!--新增树与组织关联-->
    <insert id="addTreeOrg" >
        insert into tool_tree_org (id,tree_id,org_code,create_time,creator)
        values (#{params.id},#{params.treeId}, #{params.orgCode}, sysdate, #{params.userId})
    </insert>
    <!--更新树节点信息-->
    <update id="update" >
        update  tool_tree set
        <if test = "params.name!=null and params.name!=''">
             node_name = #{params.name},
        </if>
        <if test = "params.order!=null and params.order!=''">
             order_by = #{params.order},
        </if>
        update_time = sysdate,
        updator = #{params.userId}
        where id = #{params.id}
    </update>
    <!--更新树节点属于哪个父节点-->
    <update id="updateTreeNodeParent" >
        update  tool_tree set
        pid = #{params.pid},
        <if test = "params.order!=null and params.order!=''">
            order_by = #{params.order},
        </if>
        update_time = sysdate,
        updator = #{params.userId}
        where id = #{params.id}
    </update>

    <!--删除节点信息-->
    <update id="deleteNode">
        update tool_tree t2
           set t2.is_delete = '1',
                update_time = sysdate,
                updator = #{params.userId}
         where t2.id in (select t.id
                           from tool_tree t
                          start with t.id = #{params.id}
                         connect by t.pid = prior t.id)
    </update>
    <!-- 删除树和组织结构关联关系 -->
    <update id="deleteTreeOrg">
        update  tool_tree_org set
        is_delete = '1',
        update_time = sysdate,
        updator = #{params.userId}
        where tree_id = #{params.treeId}
    </update>
    <!-- 查询树结构  -->
    <select id="query" resultMap="toolTreeVo">

        select t.id,
               t.node_name,
               level,
               t.pid,
               to_char(t.create_time, 'yyyy-mm-dd hh24:mi:ss') as create_time,
               order_by,
               connect_by_isleaf is_leaf
          from tool_tree t
          where t.is_delete = '0'
         start with t.id = #{params.id}
        connect by t.pid = prior t.id
        order by level,t.order_by ,t.create_time desc
    </select>
    <!-- 根据组织code查询树结构  -->
    <select id="queryCurrentUserTree" resultMap="toolTreeVo">
        select t.id,
               t.node_name,
               level,
               t.pid,
               to_char(t.create_time, 'yyyy-mm-dd hh24:mi:ss') as create_time,
               order_by,
               connect_by_isleaf is_leaf
          from tool_tree t
          where t.is_delete = '0'
         start with t.id in (select org.tree_id from tool_tree_org org where org.is_delete = '0' and org.org_code=#{orgId})
        connect by t.pid = prior t.id
        order by level,t.order_by ,t.create_time desc
    </select>

    <!-- 查询单个节点  -->
    <select id="querySingleNode" resultMap="toolTree">
        select *
          from tool_tree t
          where t.id = #{params.id}
    </select>
</mapper>